version: '3.1'
services:

# ZOOKEEPER SERVICE 
  zookeeper:
    image: "zookeeper"
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=0.0.0.0:2888:3888
    networks:
      - mesos
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
  
# MASTER SERVICE
  master:
    image: mesosphere/mesos-master:1.1.1
    depends_on:
      - zookeeper
    ports:
      - "5050:5050"
    networks:
      - mesos
    environment:
      - MESOS_CLUSTER=stream-juggler
      - MESOS_HOST=${HOST_IP:-0.0.0.0}
      - MESOS_PORT=5050
      - MESOS_ZK=zk://zookeeper:2181/mesos
      - MESOS_QUORUM=1
      - MESOS_LOG_DIR=/var/log/mesos
      - MESOS_WORK_DIR=/var/tmp/mesos
      - MESOS_HOSTNAME=${HOST_IP:-0.0.0.0}
  
# SLAVE SERVICE
  slave:
    image: mesosphere/mesos-slave:1.1.1
    depends_on:
      - master
    command: 
      - "--launcher=posix"
    networks:
      - mesos
    ports:
      - "5051:5051"
    environment:
      - MESOS_PORT=5051
      - MESOS_MASTER=zk://zookeeper:2181/mesos
      - MESOS_CONTAINERIZERS=docker,mesos
      - MESOS_LOG_DIR=/var/log/mesos
      - MESOS_RESOURCES=cpus:2;mem:2048;disk:1024
      - MESOS_WORK_DIR=/var/tmp/mesos
      - MESOS_HOSTNAME=192.168.1.188
      - MESOS_SLAVE_PARAMS="--launcher=posix"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

# MARATHON SERVICE
  marathon:
    image: mesosphere/marathon
    depends_on:
      - master
    networks:
      - mesos
    command:
      - "--master=zk://zookeeper:2181/mesos"
      - "--zk=zk://zookeeper:2181/marathon"
    ports: 
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8080"]
      interval: 5s
      timeout: 10s
      retries: 2

networks:
  mesos:
